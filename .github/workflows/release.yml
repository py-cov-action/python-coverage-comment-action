name: Release Action (automated)

on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]

concurrency:
  group: release

jobs:
  push-to-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    # Check if the tests were successful and were launched by a push event
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ewjoachim
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - id: docker_meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.build
          platforms: linux/amd64,linux/arm64
          labels: |
            project='python-coverage-comment-action-base'
            org='py-cov-action'
            commit-sha='${{ github.sha }}'
            org.opencontainers.image.source='https://github.com/${{ github.repository }}'
            org.opencontainers.image.description='Publish coverage report as PR comment, and create a coverage badge & dashboard to display on the Readme for Python projects, all inside GitHub without third party servers'
            org.opencontainers.image.licenses='MIT'
          tags: |
            ewjoachim/python-coverage-comment-action-base:v6
            ghcr.io/py-cov-action/python-coverage-comment-action-base:v6
            ${{ steps.docker_meta.outputs.tags }}
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
          push: true

  compute-tags:
    name: Re-tag action with new version
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Apply new tags
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -eux
          current="$(git describe --tags --abbrev=0 --match 'v*.*')"

          major="$(echo $current | cut -d. -f1)"
          minor="$(echo $current | cut -d. -f2)"

          git tag -f ${major}
          git push -f origin ${major}

[tool.poetry]
name = "coverage-comment"
version = "0.0.0"
description = "Publish diff coverage report as PR comment, and create a coverage badge to display on the readme, for Python projects."
authors = ["Joachim Jablon <ewjoachim@gmail.com>"]
license = "MIT License"
packages = [{ include = "coverage_comment" }]
include = ["coverage_comment/default.md.j2"]

[tool.poetry.scripts]
coverage_comment = 'coverage_comment.main:main'

[project]
requires-python = ">=3.12"

[tool.poetry.dependencies]
python = "^3.12"
coverage = { version = "*", extras = ["toml"] }
httpx = { version = "*", extras = ["http2"] }
Jinja2 = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
tenacity = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = """
    --cov-report term-missing --cov-branch --cov-report html --cov-report term
    --cov=coverage_comment --cov-context=test -vv --strict-markers -rfE
    --ignore=tests/end_to_end/repo
"""
testpaths = ["tests/unit", "tests/integration", "tests/end_to_end"]

filterwarnings = ["error"]
markers = [
    "repo_suffix: Allows to use an additional suffix for the e2e test repo.",
    "code_path: Allows to place the code in a subdirectory for the e2e test repo.",
    "subproject_id: Allows to use a different subproject id for the e2e test repo.",
    "add_branches: Adds branches besides 'main' and 'branch' to integration tests setup.",
]

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
exclude_also = ["\\.\\.\\."]

[tool.coverage.html]
show_contexts = true

[tool.mypy]
no_implicit_optional = true

[tool.ruff]
target-version = "py312"
unsafe-fixes = true

[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "I", # isort
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "RUF", # ruff
]
fixable = ["ALL"]
extend-ignore = [
  "E501", # line too long
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
